- name: prepare some dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
  - "{{ work_dir }}"
  - "{{ work_dir }}/assets"
  when: install_type == "install"

- name: tar files
  copy:
    dest: "{{work_dir}}/{{item}}"
    src: "{{pkg_dir}}/{{item}}"
  with_items:
  - "keepalived.tgz"
  when: install_type == "install"

- name: template config
  template:
    dest: "{{work_dir}}/assets/{{item}}"
    src: "{{conf_dir}}/{{item}}.j2"
  with_items:
  - "keepalived.conf"
  when: install_type == "install"

- name: template scripts
  template:
    dest: "{{work_dir}}/assets/{{item}}"
    src: "{{conf_dir}}/{{item}}.j2"
    mode: 0755
  with_items:
  - "check_nginx.sh"
  - "check_vmauth.sh"
  - "notify.sh"
  when: install_type == "install"

- name: template start script
  template:
    dest: "{{work_dir}}/init.sh"
    src: "{{conf_dir}}/init.sh.j2"
  when: install_type == "install"

- name: "start"
  shell: "bash {{work_dir}}/init.sh"
  when: install_type == "install"

- name: stop all {{service_name}}
  shell: "docker stop {{service_name}} && sleep 5 && docker rm -f {{service_name}}"
  ignore_errors: true
  when: install_type == "delete"

- name: clean all {{service_name}} data
  shell: "rm -rf {{ work_dir }}"
  ignore_errors: true
  when: install_type == "delete"
